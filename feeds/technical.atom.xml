<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Onoreto</title><link href="https://steviepoppe.net/" rel="alternate"></link><link href="https://steviepoppe.net/feeds/technical.atom.xml" rel="self"></link><id>https://steviepoppe.net/</id><updated>2016-09-06T00:00:00+02:00</updated><entry><title>Parsing Japanese Text in Markdown-Python for Stylizing and Semantic Purposes</title><link href="https://steviepoppe.net/blog/2016/09/parsing-japanese-text-in-markdown-python-for-stylizing-and-semantic-purposes/" rel="alternate"></link><published>2016-09-06T00:00:00+02:00</published><author><name>Stevie Poppe</name></author><id>tag:steviepoppe.net,2016-09-06:blog/2016/09/parsing-japanese-text-in-markdown-python-for-stylizing-and-semantic-purposes/</id><summary type="html">
&lt;p&gt;Due to my studies I (will) often use Japanese in my blog. As I gave some thought to typography and readability, I found the default appearance of Japanese text to be in stark contrast with the rest of my design.&lt;sup id="fnref:1"&gt;&lt;/sup&gt; To target specifically Japanese text, I wrote a small Markdown-Python extension for use in static blog generators as Jekyll and Pelican (or pretty much anything that utilizes Markdown-Python to parse Markdown in HTML) and embed such text in a span with the language attribute set to Japanese. The added, and probably more important bonus, aside from styling and semantic reasons, is that this method counters the negative effects of &lt;a href="https://en.wikipedia.org/wiki/Han_unification"&gt;Han unification&lt;/a&gt; in so-called CJK-languages.&lt;/p&gt;
</summary><category term="python"></category><category term="pelican"></category><category term="markdown"></category><category term="Japanese"></category><category term="fonts"></category></entry><entry><title>Pelican Plugin: CSS-only footnote pop-up</title><link href="https://steviepoppe.net/blog/2016/08/pelican-plugin-css-only-footnote-pop-up/" rel="alternate"></link><published>2016-08-25T00:00:00+02:00</published><author><name>Stevie Poppe</name></author><id>tag:steviepoppe.net,2016-08-25:blog/2016/08/pelican-plugin-css-only-footnote-pop-up/</id><summary type="html">
&lt;p&gt;Footnotes are a classic staple in any writer’s toolbox and allows them to, in an unobtrusive way, citate sources or display additional information not directly related to the original argument. Yet I feel online footnotes, through the way they’re often implemented imitating printed media footnotes, come over quite counterintuitive by forcing the interested reader to disrupt his reading flow, and by failing to make use of today’s extensive webdesign posibilities.&lt;/p&gt;
&lt;p&gt;As I royally use footnotes in my markdown writing workflow&lt;sup id="fnref:1"&gt;&lt;/sup&gt; I figured I’d get acquainted with the Pelican documentation a bit and write a small unobtrusive CSS pop-up plugin to display these on hover for those devices that support it.&lt;sup id="fnref:2"&gt;&lt;/sup&gt;&lt;/p&gt;
</summary><category term="Pelican"></category><category term="Markdown"></category><category term="Python"></category><category term="Footnotes"></category></entry><entry><title>Hello World - About This Blog</title><link href="https://steviepoppe.net/blog/2016/08/hello-world-about-this-blog/" rel="alternate"></link><published>2016-08-23T00:00:00+02:00</published><author><name>Stevie Poppe</name></author><id>tag:steviepoppe.net,2016-08-23:blog/2016/08/hello-world-about-this-blog/</id><summary type="html">
&lt;!-- PELICAN_START_SUMMARY --&gt;
&lt;p&gt;I’ve been thinking on maintaining a blog for a while now and had already stacked up a pile of writings ready to post. A long summer break allowed me enough free time to sit down and get started on the technicalities; a process a bit more complicated as initially expected but worth it in the long run. This blog serves not as a tutorial on making one with Pelican (I’ll get to that eventually), but as a brief log on my reasoning and thought process during creation.&lt;/p&gt;
</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category></entry></feed>