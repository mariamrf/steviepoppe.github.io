<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Onoreto</title><link href="https://steviepoppe.github.io/" rel="alternate"></link><link href="https://steviepoppe.github.io/feeds/technical.atom.xml" rel="self"></link><id>https://steviepoppe.github.io/</id><updated>2016-08-23T00:00:00+02:00</updated><entry><title>Hello World - About this Blog</title><link href="https://steviepoppe.github.io/blog/2016/08/hello-world-about-this-blog/" rel="alternate"></link><published>2016-08-23T00:00:00+02:00</published><author><name>Stevie Poppe</name></author><id>tag:steviepoppe.github.io,2016-08-23:blog/2016/08/hello-world-about-this-blog/</id><summary type="html">&lt;p&gt;I’ve been thinking on maintaining a blog for a while now and had already stacked up a pile of writings ready to post. A long summer break allowed me enough free time to sit down and get started on the technicalities; a process a bit more complicated as initially expected. This blog serves not as a tutorial on making one with Pelican (there’s plenty of those as it is), but as a brief log on my thought process during creation.&lt;/p&gt;
&lt;p&gt;From the outset I tried to steer away from heavy management systems such as &lt;strong&gt;Drupal&lt;/strong&gt; or &lt;strong&gt;WordPress&lt;/strong&gt;. They’re easy to work with and take a lot of work of your hands, but a serverside database means too heavy a load for what’s basically a smallscale personal blog, and several unnecessary security risks on top&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. The tech-hipster in me opted for a DIY approach with full control over both content and design. Static blog framework wise there are several popular options, but as I’m more accustomed to the &lt;em&gt;Python&lt;/em&gt; programming language through other applications, I ended up choosing for &lt;strong&gt;&lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;&lt;/strong&gt; over the more widespread &lt;em&gt;Ruby&lt;/em&gt;-based &lt;strong&gt;&lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;&lt;/strong&gt;. An added value of managing my blogs clientside and delivering small sized static pages is the ease of finding an appropriate host (I host my pages on &lt;strong&gt;&lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;&lt;/strong&gt; while serving larger files through Dropbox) and a seamless integration in my &lt;em&gt;Markdown&lt;/em&gt;-based writing workflow&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The initial set-up is relatively simple, as installation and basic generation is done through command line, and content written in &lt;em&gt;Markdown&lt;/em&gt;, &lt;em&gt;AsciiDoc&lt;/em&gt; or &lt;em&gt;reStructuredText&lt;/em&gt;&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; gets served as stand-alone pages or articles. There’s a wide choice of &lt;a href="http://www.pelicanthemes.com/"&gt;existing templates&lt;/a&gt;, but further customization requires some working knowledge on webdesign as well as, preferably, on basic programming concepts (Pelican templates are created using the python-based &lt;strong&gt;&lt;a href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt;&lt;/strong&gt;, allowing for template logic and inheritance). Needless to say, hosting on GitHub Pages requires knowledge of &lt;strong&gt;Git&lt;/strong&gt;, but that’s really not a skill learned in vain as the concept of version control applies well to writing important papers too.&lt;/p&gt;
&lt;p&gt;Getting acquainted with these tools can be time consuming. Luckily there are plenty of tutorials out there, as well as hundreds of working examples hosted on GitHub available as reference (the backbone of my template is a heavily modified &lt;em&gt;&lt;a href="https://github.com/kdeldycke/plumage"&gt;Plumage&lt;/a&gt;&lt;/em&gt; theme). I prefer a minimalistic layout easy on the eye, and steered clear of unnecessary clutter, but with the advent of visual blogging&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; I figured I’d integrate &lt;em&gt;some&lt;/em&gt; graphical elements, such as article banners, after all: visual content engages the reader more easily. One easily overlooked design problem is ensuring responsive pages for the ever increasing internet access through smartphones, but with Twitter’s &lt;strong&gt;Bootstrap&lt;/strong&gt; framework this comes pretty naturally. Finally, implementing additional features is pretty easy too. There’s a wide range of existing &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;plugins&lt;/a&gt; for features like searching, gzip cacheing for better performance, minifying assets, table of contents and comments (using the third-party &lt;strong&gt;&lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;&lt;/strong&gt; blog hosting service). &lt;/p&gt;
&lt;p&gt;Part on GitHub Pages and git here&lt;/p&gt;
&lt;p&gt;(some visual elements here)&lt;/p&gt;
&lt;p&gt;Conclusion: -&amp;gt; aims of this blog and this particular blogpost (no real use lol)&lt;/p&gt;
&lt;p&gt;Here’s several decent tutorials on setting up Pelican and hosting on GitHub Pages. If anyone’s interested on more information on setting things up, feel free to leave a comment.&lt;/p&gt;
&lt;h2 id="further-reading"&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://guizishanren.com/guide-to-set-up-github-page-and-pelican/&lt;/li&gt;
&lt;li&gt;Links here&lt;/li&gt;
&lt;li&gt;Links here&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Burnett, Brett. 2015. “Why Did We Migrate from Drupal to Jekyll?” Text. The BHW Group. november 16–. https://thebhwgroup.com/blog/jekyll-drupal-wordpress &lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;O’Nolan, John. 2015. “The Ultimate Guide to Writing &amp;amp; Publishing with Markdown”. Ghost. maart 0. https://blog.ghost.org/markdown/ &lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;All three are open, lightweight markup languages with a heavy focus on readability through seperation of content and layout layers. &lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;Fanguy, Will. 2016. “The Amazing Evolution of Visual Storytelling: Blogging, Instagram, Snapchat, and the Future”. Business 2 Community. Geraadpleegd augustus 24. http://www.business2community.com/trends-news/amazing-evolution-visual-storytelling-blogging-instagram-snapchat-future-01557833 &lt;a class="footnote-backref" href="#fnref:4" rev="footnote" title="Jump back to footnote 4 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category></entry></feed>